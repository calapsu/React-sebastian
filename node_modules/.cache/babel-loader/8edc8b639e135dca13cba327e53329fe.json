{"ast":null,"code":"import _slicedToArray from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sebastian/Documentos/React/platzi-badges/src/components/BadgesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Gravatar from './Gravatar';\nimport '../styles/BadgesList.css';\n\nvar BadgesListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgesListItem, _React$Component);\n\n  function BadgesListItem() {\n    _classCallCheck(this, BadgesListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BadgesListItem).apply(this, arguments));\n  }\n\n  _createClass(BadgesListItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"BadgesListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(Gravatar, {\n        className: \"BadgesListItem__avatar\",\n        email: this.props.badge.email,\n        alt: \"\".concat(this.props.badge.firstName, \" \").concat(this.props.badge.lastName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.badge.firstName, \" \", this.props.badge.lastName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), \"@\", this.props.badge.twitter, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), this.props.badge.jobTitle));\n    }\n  }]);\n\n  return BadgesListItem;\n}(React.Component);\n\nfunction useSearchBadges(badges) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(badges),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filteredBadges = _React$useState4[0],\n      setFilteredBadges = _React$useState4[1];\n\n  React.useMemo(function () {\n    var result = badges.filter(function (badge) {\n      return \"\".concat(badge.firstName, \" \").concat(badge.lastName).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredBadges(result);\n  }, [badges, query]);\n  return {\n    query: query,\n    setQuery: setQuery,\n    filteredBadges: filteredBadges\n  };\n}\n\nfunction BadgesList(props) {\n  var badges = props.badges;\n\n  var _useSearchBadges = useSearchBadges(badges),\n      query = _useSearchBadges.query,\n      setQuery = _useSearchBadges.setQuery,\n      filteredBadges = _useSearchBadges.filteredBadges;\n\n  if (filteredBadges.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Filter Badges\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: query,\n      onChange: function onChange(e) {\n        setQuery(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"No badges were found\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/badges/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Create new badge\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"BadgesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Filter Badges\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: query,\n    onChange: function onChange(e) {\n      setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, filteredBadges.map(function (badge) {\n    return React.createElement(\"li\", {\n      key: badge.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"text-reset text-decoration-none\",\n      to: \"/badges/\".concat(badge.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(BadgesListItem, {\n      badge: badge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  })));\n}\n\nexport default BadgesList;","map":{"version":3,"sources":["/home/sebastian/Documentos/React/platzi-badges/src/components/BadgesList.js"],"names":["React","Link","Gravatar","BadgesListItem","props","badge","email","firstName","lastName","twitter","jobTitle","Component","useSearchBadges","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","BadgesList","length","e","target","value","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Gravatar from './Gravatar';\n\nimport '../styles/BadgesList.css';\n\nclass BadgesListItem extends React.Component {\n  render() {\n    return (\n      <div className=\"BadgesListItem\">\n        <Gravatar\n          className=\"BadgesListItem__avatar\"\n          email={this.props.badge.email}\n          alt={`${this.props.badge.firstName} ${this.props.badge.lastName}`}\n        />\n        <div>\n          <strong>\n            {this.props.badge.firstName} {this.props.badge.lastName}\n          </strong>\n          <br />@{this.props.badge.twitter}\n          <br />\n          {this.props.badge.jobTitle}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction useSearchBadges(badges) {\n  const [ query, setQuery ] = React.useState('');\n  const [ filteredBadges, setFilteredBadges ] = React.useState(badges);\n\n  React.useMemo(() => {\n    const result =  badges.filter(badge => {\n    return `${badge.firstName} ${badge.lastName}`\n    .toLowerCase()\n    .includes(query.toLowerCase());\n  });\n\n  setFilteredBadges(result);\n\n}, [badges, query]);\n\n  return {query, setQuery, filteredBadges}\n}\n\nfunction BadgesList (props)  {\n  const badges = props.badges;\n\n  const {query, setQuery, filteredBadges} = useSearchBadges(badges);\n\n    if (filteredBadges.length === 0) {\n      return (\n        <div>\n          <div className=\"form-group\">\n          <label>Filter Badges</label>\n          <input type=\"text\" className=\"form-control\" \n          value={query}\n          onChange={(e) => {\n          setQuery(e.target.value)\n          }}\n          />\n        </div>\n          <h3>No badges were found</h3>\n          <Link className=\"btn btn-primary\" to=\"/badges/new\">\n            Create new badge\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <div className=\"BadgesList\">\n        <div className=\"form-group\">\n          <label>Filter Badges</label>\n          <input type=\"text\" className=\"form-control\" \n          value={query}\n          onChange={(e) => {\n          setQuery(e.target.value)\n          }}\n          />\n        </div>\n        <ul className=\"list-unstyled\">\n          {filteredBadges.map(badge => {\n            return (\n              <li key={badge.id}>\n                <Link className=\"text-reset text-decoration-none\" \n                  to={`/badges/${badge.id}`}>\n                  <BadgesListItem badge={badge} />\n                </Link>             \n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n\nexport default BadgesList;"]},"metadata":{},"sourceType":"module"}