{"ast":null,"code":"import _defineProperty from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sebastian/Documentos/React/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sebastian/Documentos/React/platzi-badges/src/pages/BadgeEdit.js\";\nimport React from 'react';\nimport '../styles/BadgeEdit.css';\nimport header from \"../images/platziconf-logo.svg\";\nimport BadgeForm from '../components/BadgeForm';\nimport Badge from '../components/Badge';\nimport api from '../api';\nimport PageLoading from '../components/PageLoading';\n\nvar BadgeEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgeEdit, _React$Component);\n\n  function BadgeEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BadgeEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BadgeEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      error: null,\n      form: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        jobTitle: '',\n        twitter: ''\n      }\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return api.badges.read(_this.props.match.params.badgeId);\n\n              case 4:\n                data = _context.sent;\n\n                _this.setState({\n                  loading: false,\n                  form: data\n                });\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.setState({\n                  loading: false,\n                  error: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return api.badges.create(_this.state.form);\n\n              case 5:\n                _this.setState({\n                  loading: false\n                });\n\n                _this.props.history.push('/badges');\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this.setState({\n                  loading: false,\n                  error: _context2.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BadgeEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BadgeEdit__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"BadgeEdit__hero-image img-fluid\",\n        src: header,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        firstName: this.state.form.firstName || 'FIRST_NAME',\n        lastName: this.state.form.lastName || 'LAST_NAME',\n        twitter: this.state.form.twitter || 'twitter',\n        jobTitle: this.state.form.jobTitle || 'JOB_TITLE',\n        email: this.state.form.email || 'EMAIL',\n        avatarUrl: \"https://s.gravatar.com/avatar/891defce09b63266859a5359a5e025f4?s=80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(BadgeForm, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        formValues: this.state.form,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return BadgeEdit;\n}(React.Component);\n\nexport default BadgeEdit;","map":{"version":3,"sources":["/home/sebastian/Documentos/React/platzi-badges/src/pages/BadgeEdit.js"],"names":["React","BadgeForm","Badge","api","PageLoading","BadgeEdit","state","loading","error","form","firstName","lastName","email","jobTitle","twitter","fetchData","e","setState","badges","read","props","match","params","badgeId","data","handleChange","target","name","value","handleSubmit","preventDefault","create","history","push","header","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,yBAAP;;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,IAAI,EAAE;AACNC,QAAAA,SAAS,EAAE,EADL;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNC,QAAAA,KAAK,EAAE,EAHD;AAINC,QAAAA,QAAQ,EAAE,EAJJ;AAKNC,QAAAA,OAAO,EAAE;AALH;AAHF,K;;UAeRC,S;;;;;+BAAY,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACR,sBAAKC,QAAL,CAAc;AAAEV,kBAAAA,OAAO,EAAE,IAAX;AAAiBC,kBAAAA,KAAK,EAAE;AAAxB,iBAAd;;AADQ;AAAA;AAAA,uBAIeL,GAAG,CAACe,MAAJ,CAAWC,IAAX,CACf,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OADT,CAJf;;AAAA;AAIEC,gBAAAA,IAJF;;AAQJ,sBAAKP,QAAL,CAAc;AAACV,kBAAAA,OAAO,EAAE,KAAV;AAAiBE,kBAAAA,IAAI,EAAEe;AAAvB,iBAAd;;AARI;AAAA;;AAAA;AAAA;AAAA;;AAUJ,sBAAKP,QAAL,CAAc;AAAEV,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,KAAK;AAAvB,iBAAd;;AAVI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAcZiB,Y,GAAe,UAAAT,CAAC,EAAI;AAChB,YAAKC,QAAL,CAAc;AACVR,QAAAA,IAAI,oBACG,MAAKH,KAAL,CAAWG,IADd,sBAECO,CAAC,CAACU,MAAF,CAASC,IAFV,EAEiBX,CAAC,CAACU,MAAF,CAASE,KAF1B;AADM,OAAd;AAMH,K;;UAEDC,Y;;;;;+BAAe,kBAAMb,CAAN;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACc,cAAF;;AACA,sBAAKb,QAAL,CAAc;AAAEV,kBAAAA,OAAO,EAAE,IAAX;AAAiBC,kBAAAA,KAAK,EAAE;AAAxB,iBAAd;;AAFW;AAAA;AAAA,uBAKDL,GAAG,CAACe,MAAJ,CAAWa,MAAX,CAAkB,MAAKzB,KAAL,CAAWG,IAA7B,CALC;;AAAA;AAMP,sBAAKQ,QAAL,CAAc;AAAEV,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAEA,sBAAKa,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;;AARO;AAAA;;AAAA;AAAA;AAAA;;AAUP,sBAAKhB,QAAL,CAAc;AAAEV,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,KAAK;AAAvB,iBAAd;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCA3BK;AAChB,WAAKO,SAAL;AACH;;;6BAuCQ;AACL,UAAG,KAAKT,KAAL,CAAWC,OAAd,EAAuB;AACnB,eAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,SAAS,EAAC,iCADV;AAEA,QAAA,GAAG,EAAE2B,MAFL;AAGA,QAAA,GAAG,EAAC,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACA,QAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWG,IAAX,CAAgBC,SAAhB,IAA6B,YADxC;AAEA,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,QAAhB,IAA4B,WAFtC;AAGA,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWG,IAAX,CAAgBK,OAAhB,IAA2B,SAHpC;AAIA,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWG,IAAX,CAAgBI,QAAhB,IAA4B,WAJtC;AAKA,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,IAAX,CAAgBG,KAAhB,IAAyB,OALhC;AAMA,QAAA,SAAS,EAAC,qEANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACA,QAAA,QAAQ,EAAE,KAAKa,YADf;AAEA,QAAA,QAAQ,EAAE,KAAKI,YAFf;AAGA,QAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWG,IAHvB;AAIA,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CADJ,CATJ,CADJ;AAkCH;;;;EA3FmBR,KAAK,CAACmC,S;;AA8F9B,eAAe9B,SAAf","sourcesContent":["import React from 'react';\n\nimport '../styles/BadgeEdit.css';\nimport header from '../images/platziconf-logo.svg';\nimport BadgeForm from '../components/BadgeForm';\nimport Badge from '../components/Badge';\nimport api from '../api';\nimport PageLoading from '../components/PageLoading';\n\nclass BadgeEdit extends React.Component {\n    state = { \n        loading: true,\n        error: null,\n        form: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        jobTitle: '',\n        twitter: '',\n    } };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData = async e => {\n        this.setState({ loading: true, error: null })\n\n        try {\n            const data = await api.badges.read(\n                this.props.match.params.badgeId\n            )\n\n            this.setState({loading: false, form: data})\n        } catch (error) {\n            this.setState({ loading: false, error: error});\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value,\n            }\n        });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n        this.setState({ loading: true, error: null});\n\n        try {\n            await api.badges.create(this.state.form);\n            this.setState({ loading: false });\n\n            this.props.history.push('/badges');\n        } catch (error) {\n            this.setState({ loading: false, error: error });\n        }\n    }\n\n    render() {\n        if(this.state.loading) {\n            return <PageLoading />;\n        }\n        return (\n            <div>\n                <div className=\"BadgeEdit__hero\">\n                    <img \n                    className=\"BadgeEdit__hero-image img-fluid\" \n                    src={header} \n                    alt=\"Logo\" \n                    />\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <Badge \n                            firstName={this.state.form.firstName || 'FIRST_NAME'}\n                            lastName={this.state.form.lastName || 'LAST_NAME'}\n                            twitter={this.state.form.twitter || 'twitter'}\n                            jobTitle={this.state.form.jobTitle || 'JOB_TITLE'}\n                            email={this.state.form.email || 'EMAIL'}\n                            avatarUrl=\"https://s.gravatar.com/avatar/891defce09b63266859a5359a5e025f4?s=80\"\n                            />\n                        </div>\n                        <div className=\"col-6\">\n                            <BadgeForm \n                            onChange={this.handleChange} \n                            onSubmit={this.handleSubmit}\n                            formValues={this.state.form}\n                            error={this.state.error}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BadgeEdit;"]},"metadata":{},"sourceType":"module"}